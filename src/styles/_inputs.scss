@use "./decisions";
@use "./mixins/input";
@use "./mixins/utils";
@use "./mixins/shadow";
@use "./button";

.ak-input {

  &.ak-input__interactive {
    display: flex;
    align-items: stretch;

    padding: decisions.$ak-size-l 0;

    & input {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }

    & button {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
      @include button.ak-button-tertiary();
    }
  }

  & > label, & > .ak-input__title {
    display: block;
    width: 100%;

    cursor: pointer;

    margin-top: decisions.$ak-size-l;
    margin-bottom: decisions.$ak-size-s;
  }

  & input {
    width: 100%;
    padding: decisions.$ak-size-m;

    font-size: inherit;
    font-family: inherit;
    line-height: inherit;
    color: inherit;
    background-color: white;

    border: 1px solid decisions.$ak-color-border;
    border-radius: decisions.$ak-size-m;
    outline: 0;

    &.ng-dirty:invalid, &.ng-touched:invalid {
      @include input.ak-input-invalid();
    }

    &:focus {
      @include input.ak-input-focus();
    }

  }

  & .ak-input__error-text {
    display: flex;
    align-items: center;

    font-size: decisions.$ak-size-m + decisions.$ak-size-s;
    color: decisions.$ak-color-negative-strong;
    fill: decisions.$ak-color-negative-strong;
    margin-top: decisions.$ak-size-s;

    * + * {
      margin-left: decisions.$ak-size-xs;
    }
  }

  &.ak-input--amount {
    @include utils.ak-flex-column();

    input {
      opacity: 0;
      height: 0;
      width: 0;
      padding: 0;
      border: 0;
    }

    input:focus + .ak-amount {
      @include input.ak-input-focus();
    }
  }
}

.ak-amount {
  width: 100%;
  text-align: right;
  cursor: pointer;

  border: 1px solid decisions.$ak-color-border;
  border-radius: decisions.$ak-size-m;

  background-color: white;

  padding: decisions.$ak-size-m;

  &.ak-amount--big {
    padding: 0 decisions.$ak-size-m;

    font-size: decisions.$ak-size-xl;
    line-height: decisions.$ak-size-xxl;
  }
}

.ak-toggle {
  display: inline-flex;
  align-items: center;
  justify-content: space-between;

  & > input {
    @include utils.visually-hidden();
  }

  & > input:focus + label {
    @include input.ak-input-focus();
  }

  & > label {
    display: inline-flex;
    align-items: center;

    width: decisions.$ak-size-xxl;
    height: decisions.$ak-size-l + decisions.$ak-size-m;

    border-radius: decisions.$ak-size-l;

    background-color: decisions.$ak-color-border;

    cursor: pointer;

    @include shadow.ak-shadow-small-inset();
    @include utils.ak-transition();

    &:after {
      content: '';
      height: decisions.$ak-size-l;
      width: decisions.$ak-size-l;

      margin-left: decisions.$ak-size-s;

      border-radius: 50%;
      background-color: decisions.$ak-color-light;

      @include shadow.ak-shadow-small();
      @include utils.ak-transition();
    }
  }

  & > input:checked + label {
    background-color: decisions.$ak-color-primary;
  }

  & > input:checked + label:after {
    transform: translateX(decisions.$ak-size-l + decisions.$ak-size-m);
  }
}

.ak-input-hues {
  display: flex;

  & > .ak-input-hues__hue {
    flex-grow: 1;
    height: decisions.$ak-size-xl;


    & > input:checked + label {
      border: 4px solid decisions.$ak-color-primary;
    }

    & > input:focus + label {
      @include input.ak-input-focus();
    }

    & > label {
      display: block;
      height: 100%;
      width: 100%;
      cursor: pointer;
      border-radius: decisions.$ak-size-s;
    }

    & + .ak-input-hues__hue {
      margin-left: decisions.$ak-size-m;
    }
  }
}
