@use "./decisions";
@use "./mixins/input";
@use "./mixins/utils";
@use "./mixins/shadow";

.ak-organizer {
  display: flex;
  align-items: center;

  width: 100%;

  & > * {
    flex-grow: 0;
  }

  & > * + * {
    margin-left: decisions.$ak-size-m;
  }

  & > .ak-organizer__fill {
    flex-grow: 1;
    margin-left: 0;
  }
}

.ak-options-toggle {
  display: inline-flex;
  align-items: center;
  justify-content: space-between;

  & > input {
    @include utils.visually-hidden();
  }

  & > input:focus + label {
    @include input.ak-input-focus();
  }

  & > label {
    position: relative;

    display: inline-flex;
    align-items: center;

    width: decisions.$ak-size-xxl;
    height: decisions.$ak-size-l + decisions.$ak-size-m;

    border-radius: decisions.$ak-size-l;

    background-color: decisions.$ak-color-negative-normal;
    stroke: decisions.$ak-color-negative-normal;

    cursor: pointer;

    transition: background-color 0.2s ease-in-out, stroke 0.2s ease-in-out;

    @include shadow.ak-shadow-small-inset();

    & > .ak-options-toggle__background {
      position: absolute;
      display: flex;
      align-items: center;
      justify-content: space-around;
      width: 100%;
      stroke: decisions.$ak-color-light;
    }

    & > .ak-options-toggle__handle {
      position: absolute;

      height: decisions.$ak-size-l;
      width: decisions.$ak-size-l;

      margin-left: decisions.$ak-size-s;

      border-radius: 50%;
      background-color: decisions.$ak-color-light;

      @include shadow.ak-shadow-small();
      @include utils.ak-transition();
    }
  }

  & > input:checked + label {
    background-color: decisions.$ak-color-positive-normal;
  }

  & > input:checked + label {
    & > .ak-options-toggle__handle {
      transform: translateX(decisions.$ak-size-l + decisions.$ak-size-m);
    }
  }
}

